@page
@model SkillCoacher.Pages.EditTestModel
@{

    <div class="col-md-8 blog-main shadow">
        <h2 class="blog-post-title">Изменить тест</h2>
        <hr />
        <form method="post">
            <input asp-for="@Model.CurrentTest.Id" id="testId" type="hidden" />
            <input asp-for="@Model.CurrentTest.Name" id="testName" type="hidden" />
            @for (int i = 0; i < Model.CurrentTest.Questions.Count(); i++)
            {
                <div id="questionsContainer">

                    <input asp-for="@Model.CurrentTest.Questions[i].Id " type="hidden" />
                    <input asp-for="@Model.CurrentTest.Questions[i].OwnerTestId " type="hidden" />
                    <div class="list list-row card" id="sortable" data-sortable-id="0" aria-dropeffect="move">
                        <div class="ml-lg-4 mt-lg-3">
                            <h4>Редактировать вопрос</h4>
                            <input class="form-control w-75" type="text" asp-for="@Model.CurrentTest.Questions[i].Name" />
                        </div>
                        <div class="ml-lg-4 mt-lg-4">
                            <div class="list list-row card" data-sortable-id="0" aria-dropeffect="move" id="question_@Model.CurrentTest.Questions[i].Id">
                                <h4 class="ml-lg-2" style="margin-top: 10px;">Редактировать ответы</h4>
                                @for (int j = 0; j < Model.CurrentTest.Questions[i].Answers.Count(); j++)
                                {
                                    <div id="answersContainer" class="list-item" draggable="true" role="option" aria-grabbed="false" style="">
                                        <input asp-for="@Model.CurrentTest.Questions[i].Answers[j].Id" type="hidden" />
                                        <input asp-for="@Model.CurrentTest.Questions[i].Answers[j].OwnerQuestionId" type="hidden" />
                                        <div class="input-group mb-3 w-25">
                                            <div class="input-group-prepend">
                                                <div class="input-group-text">
                                                    <input type="checkbox" id="inlineCheckbox1" value="option1">
                                                </div>
                                            </div>
                                            @*<div class="flex">*@
                                                <input class="flex form-control" asp-for="@Model.CurrentTest.Questions[i].Answers[j].Content">
                                            @*</div>*@
                                            <div class="input-group-append">
                                                <button class="btn btn-outline-danger" type="button" onclick="DeleteAnswer(@Model.CurrentTest.Questions[i].Id, @Model.CurrentTest.Questions[i].Answers[j].Id)">Удалить</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="col col-sm-2 ml-lg-1">
                                <button onclick="AddAnswer(@Model.CurrentTest.Questions[i].Id)" type="submit" class="btn btn-success" style="width: 160px;padding-left: 6px;border-left-width: 1px;margin-left: 18px;margin-bottom: 14px;">Добавить ответ</button>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col col-md-1 offset-md-9">
                                <button onclick="DeleteQuestion(@Model.CurrentTest.Questions[i].Id)" class="btn btn-danger" style="width: 160px;padding-left: 6px;border-left-width: 1px;margin-left: 18px;margin-bottom: 14px;">Удалить вопрос</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <button asp-page-handler="AddQuestion" type="button" class="btn btn-success" style="width: 160px;padding-left: 6px;border-left-width: 1px;margin-left: 18px;margin-bottom: 14px;">Добавить вопрос</button>
            <button onclick="SaveChanges()"  type="submit"class="btn btn-primary" style="width: 160px;padding-left: 6px;border-left-width: 1px;margin-left: 18px;margin-bottom: 14px;">Сохранить</button>
        </form>
        <div class="col-md-3 offset-md-9 pt-lg-4 pb-lg-4">

        </div>
    </div>
}
    @*old code*@
@*    <form method="post">
        <input asp-for="@Model.CurrentTest.Id" id="testId" type="hidden" />
        <input asp-for="@Model.CurrentTest.Name" id="testName" type="hidden" />
        @for (int i = 0; i < Model.CurrentTest.Questions.Count(); i++)
        {
            <div id="questionsContainer">

                <input asp-for="@Model.CurrentTest.Questions[i].Id " type="hidden" />
                <input asp-for="@Model.CurrentTest.Questions[i].Name" />
                <input asp-for="@Model.CurrentTest.Questions[i].OwnerTestId " type="hidden" />
                
                <div class="list list-row card" data-sortable-id="0" aria-dropeffect="move" id="question_@Model.CurrentTest.Questions[i].Id">

                    @for (int j = 0; j < Model.CurrentTest.Questions[i].Answers.Count(); j++)
                    {

                        <div id="answersContainer" class="list-item" draggable="true" role="option" aria-grabbed="false" style="">
                            <input asp-for="@Model.CurrentTest.Questions[i].Answers[j].Id" type="hidden" />
                            <input asp-for="@Model.CurrentTest.Questions[i].Answers[j].OwnerQuestionId" type="hidden" />
                            <div class="flex">
                                <input asp-for="@Model.CurrentTest.Questions[i].Answers[j].Content" />
                            </div>

                            <button class="btn btn-danger" type="button" style="width: 100px" onclick="DeleteAnswer(@Model.CurrentTest.Questions[i].Id, @Model.CurrentTest.Questions[i].Answers[j].Id)">Удалить </button>
                            <div class="form-check form-check-inline">
                                <label class="form-check-label" for="inlineCheckbox1">Правильный:</label>
                                <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1">
                            </div>
                        </div>
                    }

                    <button onclick="AddAnswer(@Model.CurrentTest.Questions[i].Id)" class="btn btn-success" type="button">Добавить ответ</button>
                    <button onclick="DeleteQuestion(@Model.CurrentTest.Questions[i].Id)" class="btn btn-danger" type="button">Удалить вопрос</button>
                </div>
            </div>
        }
        <button asp-page-handler="AddQuestion" type="submit">Добавить вопрос</button>
        <button onclick="SaveChanges()" type="button">Сохранить</button>
    </form>
}*@
<script type="text/javascript">
    function SaveChanges() {

        let $questions = new Array();
        $("form > div").each(function () {
            console.log($(this).children("input").eq(0).attr("id"));
            console.log($(this).children("input").eq(1).attr("id"));


             let $answers = new Array();

            $(this).children("div").eq(0).children("div").each(function () {
                console.log($(this).children("input").eq(0).attr("id"));
                console.log($(this).children("div").children().eq(0).attr("id"));


                $answers.push({
                    Id: $(this).children("input").eq(0).val(),
                    OwnerQuestionId: $(this).children("input").eq(1).val(),
                    Content: $(this).children("div").children().eq(0).val()
                });
            });

            $questions.push({
                Id: $(this).children("input").eq(0).val(),
                Name: $(this).children("input").eq(1).val(),
                OwnerTestId: $(this).children("input").eq(2).val(),
                Answers: $answers,
            });
        });

        let $test = { Id: $("#testId").val(), Name: $("#testName").val(),  Questions: $questions }

        console.log("enter method");
        $.ajax({
            type: "POST",
            url: '@ViewContext.RouteData.Values["page"]?handler=SaveChanges',
            data: {
                CurrentTest: $test
            },
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            success(result) {
                location.reload();
            },
            dataType: "html"
        })
    }

    function AddAnswer(QuestionId) {

        console.log("enter method");
        $.ajax({
            type: "POST",
            url: '@ViewContext.RouteData.Values["page"]?handler=AddAnswer',
            data: {
                testId: $("#testId").val(),
                questionId: QuestionId
            },
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            success(result) {
                location.reload();
            },
            dataType: "html"
        })
    }

    function DeleteQuestion(QuestionId) {

        console.log("enter method");
        $.ajax({
            type: "POST",
            url: '@ViewContext.RouteData.Values["page"]?handler=DeleteQuestion',
            data: {
                testId: $("#testId").val(),
                questionId: QuestionId
            },
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },

            success(result) {
                location.reload();
            },
            dataType: "html"
        })
    }
    function DeleteAnswer(QuestionId, AnswerId) {

        console.log("enter method");
        $.ajax({
            type: "POST",
            url: '@ViewContext.RouteData.Values["page"]?handler=DeleteAnswer',
            data: {
                testId: $("#testId").val(),
                questionId: QuestionId,
                answerId: AnswerId
            },
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            success(result) {
                location.reload();
            },
            dataType: "html"
        })
    }

</script>